#Serenity uses the serenity.conf file in the src/test/resources directory to configure test execution options.

webdriver {
  driver = chrome
  autodownload = true
}
headless.mode = true

# Si solo quieres que aparezca una imagen cuando haya un error, descomenta la linea take.screenshots
# tb funcionar√≠a incluyendo en serenity.properties la linea   serenity.take.screenshots = FOR_FAILURES

serenity {
//    take.screenshots = FOR_FAILURES
}
#
# Chrome options can be defined using the chrome.switches property
#
chrome.switches = """--start-maximized;--test-type;--no-sandbox;--ignore-certificate-errors;
                   --disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;
                   --incognito;--disable-infobars,--disable-gpu"""
                   
                   
# Podrias llegar a incluir varios drivers de la siguiente forma (en el caso de tener los ficheros)
# drivers {
#   windows{
#     webdriver.chrome.driver="src/test/resources/webdriver/windows/chromedriver.exe"
#     webdriver.gecko.driver="src/test/resources/webdriver/windows/geckodriver.exe"
#   }
#   mac {
#     webdriver.chrome.driver="src/test/resources/webdriver/mac/chromedriver"
#     webdriver.gecko.driver="src/test/resources/webdriver/mac/geckodriver"
#   }
#   linux {
#     webdriver.chrome.driver="src/test/resources/webdriver/linux/chromedriver"
#     webdriver.gecko.driver="src/test/resources/webdriver/linux/geckodriver"
#   }
# }    


# Tambien es interesante el hecho de poder tener distintos entornos configurados 
# environments {
# default{
#     webdriver.base.url="http://pagina_de_prueba/"
#   }
#   dev {
#     webdriver.base.url="http://pagina_de_prueba/dev"
#   }
#   staging {
#     webdriver.base.url="http://pagina_de_prueba/staging"
#   }
#   prod {
#     webdriver.base.url="http://pagina_de_prueba/prod"
#   }
# }      

# Habria entonces que lanzar con el siguiente goal
# mvn clean verify -Denvironment=staging 